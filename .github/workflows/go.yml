name: GitHub actions

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  LD_LIBRARY_PATH: /usr/local/lib
  WIN_LIBOQS_INSTALL_PATH: C:/liboqs
  WIN_PKG_CONFIG_PATH: C:/Strawberry/c/lib/pkgconfig


jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install liboqs
        shell: bash
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmake -S liboqs -B liboqs/build -CMAKE_INSTALL_PREFIX=${{env.WIN_LIBOQS_INSTALL_PATH}} -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
            cmake --build liboqs/build --parallel 4 --target INSTALL
          else
            cmake -S liboqs -B liboqs/build -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
            sudo cmake --build liboqs/build --parallel 4 --target install
          fi

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Configure pkgconfig (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          copy ./.config/liboqs.pc.win64 ${{env.WIN_PKG_CONFIG_PATH}}/liboqs.pc 

      - name: Install openssl on macOS
        if: matrix.os == 'macos-latest'
        run: brew install openssl

      - name: Run examples
        run: |
          go run ./examples/kem/kem.go
          go run ./examples/sig/sig.go
          go run ./examples/rand/rand.go

      - name: Run unit tests
        run: go test -v ./oqstests
