name: GitHub actions

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  LD_LIBRARY_PATH: /usr/local/lib
  POSIX_PKG_CONFIG_PATH: ${{github.workspace}}/.config
  WIN_LIBOQS_INSTALL_PATH: C:\liboqs
  WIN_PKG_CONFIG_PATH: C:\Strawberry\c\lib\pkgconfig

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install liboqs POSIX
        if: matrix.os != 'windows-latest'
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs
          cmake -S liboqs -B liboqs/build -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
          sudo cmake --build liboqs/build --parallel 4 --target install

      - name: Run examples POSIX
        if: matrix.os != 'windows-latest'
        run: |
          export PKG_CONFIG_PATH=${{env.POSIX_PKG_CONFIG_PATH}}
          go run ./examples/kem/kem.go
          echo
          go run ./examples/sig/sig.go
          echo
          go run ./examples/rand/rand.go

      - name: Run unit tests POSIX
        if: matrix.os != 'windows-latest'
        run: |
          export PKG_CONFIG_PATH=${{env.POSIX_PKG_CONFIG_PATH}}
          go test -v ./oqstests

      - name: Install liboqs Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs
          cmake -S liboqs -B liboqs\build -DCMAKE_INSTALL_PREFIX=${{env.WIN_LIBOQS_INSTALL_PATH}} -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON
          cmake --build liboqs\build --parallel 4 --target install

      - name: Configure pkgconfig Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          copy .\.config\liboqs.pc.win64 ${{env.WIN_PKG_CONFIG_PATH}}\liboqs.pc

      - name: Run examples Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          set "PATH=%PATH%;${{env.WIN_LIBOQS_INSTALL_PATH}}\bin"
          go run .\examples\kem\kem.go
          echo.
          go run .\examples\sig\sig.go
          echo.
          go run .\examples\rand\rand.go

      - name: Run unit tests Windows
        shell: cmd
        if: matrix.os == 'windows-latest'
        run: |
          set "PATH=%PATH%;${{env.WIN_LIBOQS_INSTALL_PATH}}\bin"
          go test -v .\oqstests
